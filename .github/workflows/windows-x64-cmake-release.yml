name: VulkanRender CMake Workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  VCPKG_ROOT: C:/vcpkg
  OUTPUT_DIRECTORY: out/build

permissions:
  actions: read
  deployments: write
  contents: write
  id-token: write
  security-events: write

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'recursive'
          
      - name: Setup Environment
        shell: powershell
        run: |
          if (Test-Path -Path ${{github.workspace}}/${{env.OUTPUT_DIRECTORY}}) {
              Remove-Item -Path ${{github.workspace}}/${{env.OUTPUT_DIRECTORY}} -Recurse -Force
          }
          mkdir ${{github.workspace}}/${{env.OUTPUT_DIRECTORY}}/${{env.BUILD_TYPE}}/bin
          mkdir ${{github.workspace}}/${{env.OUTPUT_DIRECTORY}}/${{env.BUILD_TYPE}}/lib

      - name: Install Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@v1.2.0
        with:
          vulkan-query-version: latest
          vulkan-components: Vulkan-Headers
          vulkan-use-cache: true

      - name: Build Project
        run: |
          cmake -B ${{env.OUTPUT_DIRECTORY}} --preset ${{env.BUILD_TYPE}}
          cmake --build ${{env.OUTPUT_DIRECTORY}} --preset ${{env.BUILD_TYPE}}

      - name: Test Binaries
        working-directory: ${{github.workspace}}/${{env.OUTPUT_DIRECTORY}}/
        run: ctest -C ${{env.BUILD_TYPE}}

      - name: Run Application Benchmark
        working-directory: ${{github.workspace}}/${{env.OUTPUT_DIRECTORY}}/${{env.BUILD_TYPE}}/bin
        run: ./Benchmark.exe --benchmark_format=json | tee application_benchmark_result.json

      - name: Store Application Benchmark Result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          tool: 'googlecpp'
          output-file-path: ${{github.workspace}}/${{env.OUTPUT_DIRECTORY}}/${{env.BUILD_TYPE}}/bin/application_benchmark_result.json
          github-token: ${{ secrets.LUCOISO_PAT }}
          auto-push: true

      - name: Run Submodules Benchmark
        working-directory: ${{github.workspace}}/${{env.OUTPUT_DIRECTORY}}/${{env.BUILD_TYPE}}/bin
        run: ./SubmodulesBenchmark.exe --benchmark_format=json | tee submodules_benchmark_result.json

      - name: Push Submodules Benchmark Result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          tool: 'googlecpp'
          output-file-path: ${{github.workspace}}/${{env.OUTPUT_DIRECTORY}}/${{env.BUILD_TYPE}}/bin/submodules_benchmark_result.json
          github-token: ${{ secrets.LUCOISO_PAT }}
          auto-push: true
          gh-repository: 'github.com/lucoiso/cpp-submodules'