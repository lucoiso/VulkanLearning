name: VulkanLearning CMake Workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  VCPKG_FEATURE_FLAGS: dependencygraph
  VCPKG_ROOT: C:/vcpkg
  
permissions:
  actions: read
  deployments: write
  contents: write
  id-token: write
  security-events: write

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: 'recursive'

    - name: Setup Environment
      shell: powershell
      run: |
        if (Test-Path -Path ${{github.workspace}}\build) {
            Remove-Item -Path ${{github.workspace}}\build -Recurse -Force
        }
        mkdir ${{github.workspace}}/build
        git submodule update --init --recursive --force
            
    - name: Install Vulkan SDK
      uses: humbletim/setup-vulkan-sdk@v1.2.0
      with:
        vulkan-query-version: latest
        vulkan-components: Vulkan-Headers, Vulkan-Loader
        vulkan-use-cache: true

    - name: Configure Packages
      run: |
        vcpkg install --dry-run --allow-unsupported --clean-after-build --triplet x64-windows-${{env.BUILD_TYPE}}

    - name: Build Project
      run: |
        cmake -B out/build --preset ${{env.BUILD_TYPE}}
        cmake --build out/build --preset ${{env.BUILD_TYPE}}

    - name: Test Binaries
      working-directory: ${{github.workspace}}/out/build/
      run: ctest -C ${{env.BUILD_TYPE}}
    
    - name: Run Application Benchmark
      working-directory: ${{github.workspace}}/out/build/${{env.BUILD_TYPE}}/bin
      run: ./Benchmark.exe --benchmark_format=json | tee application_benchmark_result.json

    - name: Store Application Benchmark Result
      uses: benchmark-action/github-action-benchmark@v1
      with:
        tool: 'googlecpp'
        output-file-path: ${{github.workspace}}/build/${{env.BUILD_TYPE}}/bin/application_benchmark_result.json
        github-token: ${{ secrets.LUCOISO_PAT }}
        auto-push: true
    
    - name: Run Submodules Benchmark
      working-directory: ${{github.workspace}}/out/build/${{env.BUILD_TYPE}}/bin
      run: ./SubmodulesBenchmark.exe --benchmark_format=json | tee submodules_benchmark_result.json

    - name: Push Submodules Benchmark Result
      uses: benchmark-action/github-action-benchmark@v1
      with:
        tool: 'googlecpp'
        output-file-path: ${{github.workspace}}/out/build/${{env.BUILD_TYPE}}/bin/submodules_benchmark_result.json
        github-token: ${{ secrets.LUCOISO_PAT }}
        auto-push: true
        gh-repository: 'github.com/lucoiso/cpp-submodules'