# Author: Lucas Vilas-Boas
# Year: 2023
# Repo: https://github.com/lucoiso/VulkanRenderer

# ----------- Global Definitions -----------
SET(LIBRARY_NAME RenderCore)

# ------------- Library Setup --------------
SET(PRIVATE_MODULES_BASE_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/Modules/Private)
SET(PUBLIC_MODULES_BASE_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/Modules/Public)

SET(PRIVATE_MODULES
	${PRIVATE_MODULES_BASE_DIRECTORY}/Window.cppm
	${PRIVATE_MODULES_BASE_DIRECTORY}/Renderer.cppm

	${PRIVATE_MODULES_BASE_DIRECTORY}/Shader/ShaderManagement.cppm
	${PRIVATE_MODULES_BASE_DIRECTORY}/Shader/ShaderManagement.ixx

	${PRIVATE_MODULES_BASE_DIRECTORY}/Command/CommandsManagement.cppm
	${PRIVATE_MODULES_BASE_DIRECTORY}/Command/CommandsManagement.ixx

	${PRIVATE_MODULES_BASE_DIRECTORY}/Pipeline/PipelineManager.cppm
	${PRIVATE_MODULES_BASE_DIRECTORY}/Pipeline/PipelineManager.ixx

	${PRIVATE_MODULES_BASE_DIRECTORY}/Buffer/BufferManager.cppm
	${PRIVATE_MODULES_BASE_DIRECTORY}/Buffer/BufferManager.ixx

	${PRIVATE_MODULES_BASE_DIRECTORY}/Buffer/MeshBufferData.ixx
	${PRIVATE_MODULES_BASE_DIRECTORY}/Buffer/TextureBufferData.ixx
	${PRIVATE_MODULES_BASE_DIRECTORY}/Buffer/UniformBufferObject.ixx
	${PRIVATE_MODULES_BASE_DIRECTORY}/Buffer/AllocationTypes.cppm
	${PRIVATE_MODULES_BASE_DIRECTORY}/Buffer/AllocationTypes.ixx

	${PRIVATE_MODULES_BASE_DIRECTORY}/Device/DeviceManagement.cppm
	${PRIVATE_MODULES_BASE_DIRECTORY}/Device/DeviceManagement.ixx
	${PRIVATE_MODULES_BASE_DIRECTORY}/Device/DeviceProperties.ixx

	${PRIVATE_MODULES_BASE_DIRECTORY}/Overlay/ImGuiManagement.cppm
	${PRIVATE_MODULES_BASE_DIRECTORY}/Overlay/ImGuiManagement.ixx

	${PRIVATE_MODULES_BASE_DIRECTORY}/Input/GLFWCallbacks.cppm
	${PRIVATE_MODULES_BASE_DIRECTORY}/Input/GLFWCallbacks.ixx

	${PRIVATE_MODULES_BASE_DIRECTORY}/Camera/Camera.cppm
	${PRIVATE_MODULES_BASE_DIRECTORY}/Camera/Camera.ixx

	${PRIVATE_MODULES_BASE_DIRECTORY}/Scene/Object.cppm
	${PRIVATE_MODULES_BASE_DIRECTORY}/Scene/Vertex.ixx

	${PRIVATE_MODULES_BASE_DIRECTORY}/Utils/Debug/DebugHelpers.ixx
	${PRIVATE_MODULES_BASE_DIRECTORY}/Utils/Debug/DebugHelpers.cppm

	${PRIVATE_MODULES_BASE_DIRECTORY}/Utils/Library/Constants.ixx
	${PRIVATE_MODULES_BASE_DIRECTORY}/Utils/Library/Helpers.cppm
	${PRIVATE_MODULES_BASE_DIRECTORY}/Utils/Library/Helpers.ixx

	${PRIVATE_MODULES_BASE_DIRECTORY}/Utils/Enum/EnumConverter.ixx
	${PRIVATE_MODULES_BASE_DIRECTORY}/Utils/Enum/EnumHelpers.ixx
)

SET(PUBLIC_MODULES
	${PUBLIC_MODULES_BASE_DIRECTORY}/Window.ixx
	${PUBLIC_MODULES_BASE_DIRECTORY}/Renderer.ixx

	${PUBLIC_MODULES_BASE_DIRECTORY}/Scene/Object.ixx
	${PUBLIC_MODULES_BASE_DIRECTORY}/Scene/Transform.ixx
)

ADD_LIBRARY(${LIBRARY_NAME})
SET_TARGET_PROPERTIES(${LIBRARY_NAME} PROPERTIES LINKER_LANGUAGE CXX)

TARGET_SOURCES(${LIBRARY_NAME}
			   PRIVATE
			   FILE_SET cxx_private_modules
			   TYPE CXX_MODULES
			   BASE_DIRS ${PRIVATE_MODULES_BASE_DIRECTORY}
			   FILES ${PRIVATE_MODULES}

			   PUBLIC
			   FILE_SET cxx_public_modules
			   TYPE CXX_MODULES
			   BASE_DIRS ${PUBLIC_MODULES_BASE_DIRECTORY}
			   FILES ${PUBLIC_MODULES}
)

TARGET_INCLUDE_DIRECTORIES(${LIBRARY_NAME} PRIVATE ${PRIVATE_MODULES_BASE_DIRECTORY})
TARGET_COMPILE_DEFINITIONS(${LIBRARY_NAME} PRIVATE BUILD_DLL)

FIND_PACKAGE(Boost REQUIRED COMPONENTS log)
FIND_PACKAGE(glm REQUIRED)
FIND_PATH(TINYGLTF_INCLUDE_DIRS "tiny_gltf.h")

FIND_PACKAGE(volk CONFIG REQUIRED)
FIND_PACKAGE(VulkanMemoryAllocator CONFIG REQUIRED)
FIND_PACKAGE(SPIRV-Tools CONFIG REQUIRED)

FIND_PACKAGE(glslang CONFIG REQUIRED)

FIND_PACKAGE(glfw3 CONFIG REQUIRED)
FIND_PACKAGE(imgui CONFIG REQUIRED)

TARGET_LINK_LIBRARIES(${LIBRARY_NAME} PRIVATE
					  Boost::log

					  volk::volk_headers
					  GPUOpen::VulkanMemoryAllocator
					  SPIRV-Tools-static

					  glslang::glslang
					  glslang::glslang-default-resource-limits
					  glslang::SPIRV

					  glfw
					  glm::glm
					  imgui::imgui

					  Timer
					  Configuration
					  Coroutine

					  ImGui-Volk-Backend
)

TARGET_INCLUDE_DIRECTORIES(${LIBRARY_NAME} PRIVATE
						   ${TINYGLTF_INCLUDE_DIRS}
)

TARGET_COMPILE_DEFINITIONS(${LIBRARY_NAME} PRIVATE
						   # Assets directory (relative to binaries)
						   DEFAULT_SHADER_VERT="Resources/Shaders/TRIANGLE_VERT_SHADER.vert"
						   DEFAULT_SHADER_FRAG="Resources/Shaders/TRIANGLE_FRAG_SHADER.frag"
)

TARGET_COMPILE_DEFINITIONS(${LIBRARY_NAME} PUBLIC
						   GPU_API_DUMP=0
						   VK_NO_PROTOTYPES=1
						   IMGUI_IMPL_VULKAN_NO_PROTOTYPES=1
)

IF (WIN32)
	TARGET_COMPILE_DEFINITIONS(${LIBRARY_NAME} PUBLIC
							   VK_USE_PLATFORM_WIN32_KHR
							   WIN32_LEAN_AND_MEAN
							   NOMINMAX
							   _WIN32_WINNT=0x0601
	)
ELSEIF (MACOS)
	TARGET_COMPILE_DEFINITIONS(${LIBRARY_NAME} PUBLIC
							   VK_USE_PLATFORM_MACOS_MVK
	)
ELSEIF (UNIX)
	TARGET_COMPILE_DEFINITIONS(${LIBRARY_NAME} PUBLIC
							   VK_USE_PLATFORM_XCB_KHR
	)
ENDIF (WIN32)
